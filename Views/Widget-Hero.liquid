{% assign id = Model.ContentItem.Content.HtmlAttributesPart.Id %}

{% assign backgroundType = Model.ContentItem.Content.Hero.BackgroundType.Text %}
{% assign backgroundColour = Model.ContentItem.Content.Hero.BackgroundColour.Value %}

{% assign cssClasses = "hero" %}
{% assign constrainClasses = "constrain" %}

{% assign contentWidth = Model.ContentItem.Content.Hero.ContentWidth.Text %}
{% assign gutterClass = Model.ContentItem.Content.Hero.Gutter.Text %}

{% assign desktopRatio = Model.ContentItem.Content.Hero.AspectRatio.Text | default: "16-9" %}
{% assign tabletRatio = Model.ContentItem.Content.Hero.AspectRatioTablet.Text | default: "3-2" %}
{% assign mobileRatio = Model.ContentItem.Content.Hero.AspectRatioMobile.Text | default: "9-16" %}

{% assign cssClasses = cssClasses | append: " hero--desktop-ratio-" | append: desktopRatio %}
{% assign cssClasses = cssClasses | append: " hero--tablet-ratio-" | append: tabletRatio %}
{% assign cssClasses = cssClasses | append: " hero--mobile-ratio-" | append: mobileRatio %}

{% if Model.ContentItem.Content.HtmlAttributesPart.CssClasses %}
    {% assign cssClasses = cssClasses | append: " " | append: Model.ContentItem.Content.HtmlAttributesPart.CssClasses %}
{% endif %}

{% if contentWidth != nil %}
    {% assign constrainClasses = constrainClasses | append: ' constrain--' | append: contentWidth %}
{% endif %}

{% assign horzAlignment = Model.ContentItem.Content.Hero.HorizontalAlignment.Text %}
{% if horzAlignment != nil %}
    {% assign horzAlignmentClass = " hero--horizontal-" | append: horzAlignment %}
    {% assign cssClasses = cssClasses | append: horzAlignmentClass %}
{% endif %}

{% assign vertAlignment = Model.ContentItem.Content.Hero.VerticalAlignment.Text %}
{% if vertAlignment != nil %}
    {% assign vertAlignmentClass = " hero--vertical-" | append: vertAlignment %}
    {% assign cssClasses = cssClasses | append: vertAlignmentClass %}
{% endif %}

{% if Model.ContentItem.Content.Hero.PullUp.Value %}
    {% assign cssClasses = cssClasses | append: " hero--pull-up" %}
{% endif %}

{% if Model.ContentItem.Content.Hero.ShowScrollEncouragement.Value %}
    {% assign cssClasses = cssClasses | append: " hero--encourage-scrolling" %}
{% endif %}

{% if Model.ContentItem.Content.Hero.InvertColour.Value %}
    {% assign cssClasses = cssClasses | append: " hero--inverted" %}
{% endif %}

{% if Model.ContentItem.Content.Hero.AddGradient.Value %}
    {% assign cssClasses = cssClasses | append: " hero--with-media-gradient" %}
{% endif %}

{% if gutterClass != nil and gutterClass != "default" %}
    {% assign cssClasses = cssClasses | append: " gutter--" | append: gutterClass %}
{% endif %}

{% assign styles = "" %}

{% if backgroundColour != nil %}
    {% assign backgroundColour = "--heroBackgroundColor:" | append: backgroundColour | append:"; " %}
    {% assign styles = styles | append: backgroundColour %}
{% endif %}

{% if Model.ContentItem.Content.Hero.LazyLoad.Value %}
     {% assign loading = "lazy" %}
{% endif %}

<section {% if id != nil %} id="{{ id }}" {% endif %} class="{{ cssClasses }} {{ Model.ContentItem | animation_css }}" style="{{ styles }} {{ Model.ContentItem | animation_styles }}" {{ Model.ContentItem | animation_data_attributes }}>
    <div class="hero__body {{ constrainClasses }}">
        {{ Model.Content.Content | shape_render }}
    </div>
            
    {% if backgroundType == "embed" %}
        <div class="hero__media">
            <div class="embed embed--ratio-16-9">
				<div class="embed__source">
					<iframe src="{{ Model.ContentItem.Content.Hero.BackgroundEmbed.Text }}" loading="{{ loading | default: "eager" }}" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
				</div>
            </div>
        </div>
    {% else %}
        {{ Model.Background | shape_render }}
    {% endif %}

    {{ Model.Content.BleedPart | shape_render }}

    <div class="hero__space"></div>
</section>